{"version":3,"file":"chartjs-chart-matrix.min.js","sources":["../src/controller.ts","../src/helpers.ts","../src/element.ts","../src/index.ts"],"sourcesContent":["import { DatasetController, UpdateMode } from 'chart.js'\nimport { AnchorX, AnchorY, MatrixControllerDatasetOptions, MatrixDataPoint } from 'types/index.esm'\n\nimport { version } from '../package.json'\n\nimport MatrixElement from './element'\n\nexport default class MatrixController extends DatasetController<\n  'matrix',\n  MatrixElement,\n  MatrixElement,\n  MatrixDataPoint\n> {\n  static readonly id = 'matrix'\n  static readonly version = version\n\n  static readonly defaults = {\n    dataElementType: 'matrix',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height'],\n      },\n    },\n  }\n\n  static readonly overrides = {\n    interaction: {\n      mode: 'nearest',\n      intersect: true,\n    },\n    scales: {\n      x: {\n        type: 'linear',\n        offset: true,\n      },\n      y: {\n        type: 'linear',\n        reverse: true,\n      },\n    },\n  }\n\n  options: MatrixControllerDatasetOptions\n\n  override initialize() {\n    this.enableOptionSharing = true\n    super.initialize()\n  }\n\n  override update(mode: UpdateMode) {\n    const meta = this._cachedMeta\n\n    this.updateElements(meta.data, 0, meta.data.length, mode)\n  }\n\n  override updateElements(rects: MatrixElement[], start: number, count: number, mode: UpdateMode) {\n    const reset = mode === 'reset'\n    const { xScale, yScale } = this._cachedMeta\n    const firstOpts = this.resolveDataElementOptions(start, mode)\n    const sharedOptions = this.getSharedOptions(firstOpts)\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = !reset && this.getParsed(i)\n      const x = reset ? xScale.getBasePixel() : xScale.getPixelForValue(parsed.x)\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y)\n      const options = this.resolveDataElementOptions(i, mode)\n      const { width, height, anchorX, anchorY } = options\n      const properties = {\n        x: resolveX(anchorX, x, width),\n        y: resolveY(anchorY, y, height),\n        width,\n        height,\n        options,\n      }\n      this.updateElement(rects[i], i, properties, mode)\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts)\n  }\n\n  override draw() {\n    const ctx = this.chart.ctx\n    const data = this.getMeta().data || []\n    let i: number, ilen: number\n\n    for (i = 0, ilen = data.length; i < ilen; ++i) {\n      data[i].draw(ctx)\n    }\n  }\n}\n\nfunction resolveX(anchorX: AnchorX, x: number, width: number) {\n  if (anchorX === 'left' || anchorX === 'start') {\n    return x\n  }\n  if (anchorX === 'right' || anchorX === 'end') {\n    return x - width\n  }\n  return x - width / 2\n}\n\nfunction resolveY(anchorY: AnchorY, y: number, height: number) {\n  if (anchorY === 'top' || anchorY === 'start') {\n    return y\n  }\n  if (anchorY === 'bottom' || anchorY === 'end') {\n    return y - height\n  }\n  return y - height / 2\n}\n","import { isObject } from 'chart.js/helpers'\nimport { MatrixOptions } from 'types/index.esm'\n\nimport MatrixElement from './element'\n\ntype Bounds = { left: number; top: number; right: number; bottom: number }\n\nfunction getBounds(element: MatrixElement, useFinalPosition: boolean): Bounds {\n  const { x, y, width, height } = element.getProps(['x', 'y', 'width', 'height'], useFinalPosition)\n  return { left: x, top: y, right: x + width, bottom: y + height }\n}\n\nfunction limit(value: number, min: number, max: number) {\n  return Math.max(Math.min(value, max), min)\n}\n\nexport function parseBorderWidth(options: Pick<MatrixOptions, 'borderWidth'>, maxW: number, maxH: number) {\n  const value = options.borderWidth\n  let t: number, r: number, b: number, l: number\n\n  if (isObject(value)) {\n    t = +value.top || 0\n    r = +value.right || 0\n    b = +value.bottom || 0\n    l = +value.left || 0\n  } else {\n    t = r = b = l = +value || 0\n  }\n\n  return {\n    t: limit(t, 0, maxH),\n    r: limit(r, 0, maxW),\n    b: limit(b, 0, maxH),\n    l: limit(l, 0, maxW),\n  }\n}\n\nexport function boundingRects(element: MatrixElement) {\n  const bounds = getBounds(element, false)\n  const width = bounds.right - bounds.left\n  const height = bounds.bottom - bounds.top\n  const border = parseBorderWidth(element.options, width / 2, height / 2)\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n    },\n  }\n}\n\nexport function inRange(element: MatrixElement, x: number, y: number, useFinalPosition: boolean) {\n  const skipX = x === null\n  const skipY = y === null\n  const bounds = !element || (skipX && skipY) ? false : getBounds(element, useFinalPosition)\n\n  return (\n    bounds && (skipX || (x >= bounds.left && x <= bounds.right)) && (skipY || (y >= bounds.top && y <= bounds.bottom))\n  )\n}\n","import { Element } from 'chart.js'\nimport { addRoundedRectPath, toTRBLCorners } from 'chart.js/helpers'\nimport { MatrixOptions, MatrixProps } from 'types/index.esm'\n\nimport { boundingRects, inRange } from './helpers'\n\nexport default class MatrixElement extends Element<MatrixProps, MatrixOptions> {\n  static readonly id = 'matrix'\n\n  static override readonly defaults = {\n    backgroundColor: undefined,\n    borderColor: undefined,\n    borderWidth: undefined,\n    borderRadius: 0,\n    anchorX: 'center',\n    anchorY: 'center',\n    width: 20,\n    height: 20,\n  }\n\n  width: number\n  height: number\n\n  constructor(cfg: MatrixProps) {\n    super()\n\n    if (cfg) {\n      Object.assign(this, cfg)\n    }\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const options = this.options\n    const { inner, outer } = boundingRects(this)\n    const radius = toTRBLCorners(options.borderRadius)\n\n    ctx.save()\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath()\n      addRoundedRectPath(ctx, { x: outer.x, y: outer.y, w: outer.w, h: outer.h, radius })\n      addRoundedRectPath(ctx, { x: inner.x, y: inner.y, w: inner.w, h: inner.h, radius })\n      ctx.fillStyle = options.backgroundColor\n      ctx.fill()\n      ctx.fillStyle = options.borderColor\n      ctx.fill('evenodd')\n    } else {\n      ctx.beginPath()\n      addRoundedRectPath(ctx, { x: inner.x, y: inner.y, w: inner.w, h: inner.h, radius })\n      ctx.fillStyle = options.backgroundColor\n      ctx.fill()\n    }\n\n    ctx.restore()\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, mouseY, useFinalPosition)\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, null, useFinalPosition)\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, null, mouseY, useFinalPosition)\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const { x, y, width, height } = this.getProps(['x', 'y', 'width', 'height'], useFinalPosition)\n    return {\n      x: x + width / 2,\n      y: y + height / 2,\n    }\n  }\n\n  override tooltipPosition() {\n    return this.getCenterPoint()\n  }\n\n  getRange(axis: 'x' | 'y') {\n    return axis === 'x' ? this.width / 2 : this.height / 2\n  }\n}\n","import { Chart } from 'chart.js'\n\nimport MatrixController from './controller.js'\nimport MatrixElement from './element.js'\n\nChart.register(MatrixController, MatrixElement)\n\nexport { MatrixController, MatrixElement }\n"],"names":["MatrixController","DatasetController","initialize","this","enableOptionSharing","super","update","mode","meta","_cachedMeta","updateElements","data","length","rects","start","count","reset","xScale","yScale","firstOpts","resolveDataElementOptions","sharedOptions","getSharedOptions","i","parsed","getParsed","x","getBasePixel","getPixelForValue","y","options","width","height","anchorX","anchorY","properties","resolveX","resolveY","updateElement","updateSharedOptions","draw","ctx","chart","getMeta","ilen","getBounds","element","useFinalPosition","getProps","left","top","right","bottom","limit","value","min","max","Math","boundingRects","bounds","border","maxW","maxH","borderWidth","t","r","b","l","isObject","parseBorderWidth","outer","w","h","inner","inRange","skipX","skipY","id","version","defaults","dataElementType","animations","numbers","type","overrides","interaction","intersect","scales","offset","reverse","MatrixElement","Element","radius","toTRBLCorners","borderRadius","save","beginPath","addRoundedRectPath","fillStyle","backgroundColor","fill","borderColor","restore","mouseX","mouseY","inXRange","inYRange","getCenterPoint","tooltipPosition","getRange","axis","constructor","cfg","Object","assign","undefined","Chart","register"],"mappings":"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"}